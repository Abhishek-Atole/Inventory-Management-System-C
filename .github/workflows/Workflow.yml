name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup GCC (Windows)
      if: matrix.os == 'windows-latest'
      uses: egor-tensin/setup-mingw@v2
    
    - name: Install GCC (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y gcc
    
    - name: Install GCC (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install gcc
    
    - name: Build project
      run: |
        gcc -Wall -Wextra -std=c99 -Iinclude src/main.c src/inventory.c src/database.c -o inventory_system${{ matrix.os == 'windows-latest' && '.exe' || '' }}
    
    - name: Test build
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          test -f inventory_system.exe && echo "✅ Windows build successful"
        else
          test -f inventory_system && echo "✅ Unix build successful"
        fi