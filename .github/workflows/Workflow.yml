name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x64
    
    - name: Verify GCC installation
      run: gcc --version
    
    - name: Build project
      run: |
        gcc -Wall -Wextra -std=c99 -Iinclude src/main.c src/inventory.c src/database.c -o inventory_system.exe
    
    - name: Test executable exists
      run: |
        if (Test-Path inventory_system.exe) {
          Write-Output "‚úÖ Build successful - executable created"
          ls -la inventory_system.exe
        } else {
          Write-Error "‚ùå Build failed - executable not found"
          exit 1
        }
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: inventory-system-windows
        path: inventory_system.exe

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install GCC
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc build-essential
    
    - name: Verify GCC installation
      run: gcc --version
    
    - name: Build project
      run: |
        gcc -Wall -Wextra -std=c99 -Iinclude src/main.c src/inventory.c src/database.c -o inventory_system
    
    - name: Test executable
      run: |
        if [ -f inventory_system ]; then
          echo "‚úÖ Build successful - executable created"
          ls -la inventory_system
        else
          echo "‚ùå Build failed - executable not found"
          exit 1
        fi
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: inventory-system-linux
        path: inventory_system

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install GCC
      run: |
        brew install gcc
    
    - name: Verify GCC installation
      run: gcc --version
    
    - name: Build project
      run: |
        gcc -Wall -Wextra -std=c99 -Iinclude src/main.c src/inventory.c src/database.c -o inventory_system
    
    - name: Test executable
      run: |
        if [ -f inventory_system ]; then
          echo "‚úÖ Build successful - executable created"
          ls -la inventory_system
        else
          echo "‚ùå Build failed - executable not found"
          exit 1
        fi
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: inventory-system-macos
        path: inventory_system

  test:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Linux artifact
      uses: actions/download-artifact@v3
      with:
        name: inventory-system-linux
    
    - name: Make executable
      run: chmod +x inventory_system
    
    - name: Test with sample data
      run: |
        echo "Testing inventory system..."
        # Note: Since this is an interactive program, we can only test compilation
        echo "‚úÖ All builds completed successfully"
        echo "üì¶ Artifacts created for Windows, Linux, and macOS"